
# https://docs.mongodb.org/manual/reference/configuration-options/ 에서 원문보기


systemLog:
   verbosity: 0  #로그메세지의 레벨 설정 0~5
   #quiet: <boolean>  #추천하지 않는 옵션이라고 적혀있는듯.
   #traceAllExceptions: <boolean>  #디버깅에 관한 자세한정보 출력
   #syslogFacility: user
   #logAppend: true  #true로 하면 실행시 아무것도 안나옴... false일경우 기존로그를 백업하고 새 파일을 만듬
   logRotate: rename  #로그파일 관리에 대한것인듯, rename|reopen
   destination: file  #로그를 어디에 관리할지, 이를 지정하지 않으면 MongoDB를 표준출력에 모든 로그출력을 보낸다.
   path: D:\testMongo\log\mongod.log  #로그가 찍히는 파일위치
   timeStampFormat: iso8601-local  #시간에대한 포멧
   component:
      accessControl:
         verbosity: 0  #로그메시지 레벨 설정 0-5
      command:
         verbosity: 0
      storage:
         verbosity: 0
         journal:
            verbosity: 0
      write:
         verbosity: 0
#이 외에도 여러 verbosity 옵션이 존재한다.


#==================================================================================


#processManagement:
   #fork: true
   #pidFilePath: <string>  #프로세스 id를 저장하기위한 파일위치 지정


#==================================================================================


net:
   port: 9999  #디폴트로 27017로 되어있다. 클라이언트 연결을 수신할 포트
   bindIp: 127.0.0.1  #mongoDB에 연결하기위한 IP인듯. 공개적으로 액세스 할수 있는 인터페이스. 데이터베이스 무결성을 보호하기위해 적절한 인증 및 방화벽 제한을 구현했는지 확인해야함. 여러개의 ip주소에 바인딩하려면 쉼표로 구분된 값 목록을 입력하자.
   maxIncomingConnections: 65536  #최대 동시 연결 수. 운영체제의 최대연결 임계값보다 높은경우에는 효과가없다. 너무 낮게 설정하면 오류가 날수 있다. 
   wireObjectCheck: true  #데이터베이스에 잘못된 BSON을 삽입하는 사용을 방지하기 위해 클라이언트의 모든 요청의 유효성을 검사한다.
   ipv6: false  #기본적으로 mongoDB는 IPv6를 지원을 비활성화하지만, 필요에따라 연결할수도 있음.
   #unixDomainSocket:
      #enabled: true  #유닉스 도메인소켓에서 수신대기하지 않도록 설정
      #pathPrefix: /tmp
      #filePermissions: 0700  #유닉스 도메인소켓파일에 대한 권한을 설정
   #http:  #3.2버전부터는 MongoDB의 http인터페이스가 지원되지않는다고 함.
      #enabled: false  #deprecated since 3.2
      #JSONPEnabled: false  #deprecated since 3.2
      #RESTInterfaceEnabled: false  #deprecated since 3.2
   ssl:
      #sslOnNormalPorts: <boolean>  # deprecated since 2.6
      #mode: <string>  # disabled || allowSSL || preferSSL || requireSSL
      #PEMKeyFile: <string>
      #PEMKeyPassword: <string>
      #clusterFile: <string>
      #clusterPassword: <string>
      #CAFile: <string>
      #CRLFile: <string>
      #allowConnectionsWithoutCertificates: <boolean>
      #allowInvalidCertificates: <boolean>
      allowInvalidHostnames: false  #MongoDB의 호스트이름은 해당 인증서가 지정된 호스트 이름과 일치하지않는경우 mongod가 MongoDB를 인스턴스에 연결할수있도록 TLS/SSL 인증서에있는 호스트이름의 유효성 검사를 사용하지 않습니다.
      #disabledProtocols: <string>
      #FIPSMode: <boolean>


#==================================================================================


security:
   #keyFile: <string>  #인증 관련된 속성인듯.
   clusterAuthMode: keyFile  #인증모드? keyFile || sendKeyFile || sendX509 || x509
   authorization: disabled  #역할기반 액세스제어 (RBAC) 를 사용하지 않음.
   javascriptEnabled:  true  #서버측 자바스크립트의 실행을 활성화 또는 비활성화하기. false일 경우, db.collection.mapReduce() 같은 메소드를 서버측 에서 실행할때 작업을 수행할수 없음.
   #sasl:
      #hostName: <string>
      #serviceName: <string>
      #saslauthdSocketPath: <string>
   #enableEncryption: false  #WiredTiger 스토리지엔진에 대한 암호화를 사용. 암호화 키와 구성을 전달하려면 true로 설정해야한다.
   #encryptionCipherMode: AES256-CBC  #지금은 안되는듯... 암호화 모드?  AES256-GCM 도 가능하다.
   #encryptionKeyFile: <string>
   #kmip:
      #keyIdentifier: <string>
      #rotateMasterKey: false
      #serverName: <string>
      #port: 5696
      #clientCertificateFile: <string>
      #clientCertificatePassword: <string>
      #serverCAFile: <string>


#==================================================================================


setParameter:
   enableLocalhostAuthBypass: true  #로컬호스트 인증 우회를 할것인지 설정, true로 설정하면 로컬호스트는 인증이 필요없고, false의 경우 로컬호스트라도 인증이 필요하다.
   #<parameter1>: <value1>
   #<parameter2>: <value2>


#==================================================================================


storage:
   dbPath: D:\testMongo\dbTest  #mongod의 인스턴스가 데이터를 저장하는 디렉토리, 디폴트경로는 윈도우: \data\db 이며, OS X와 Linux에서는 /data/db 이다.
   indexBuildRetry: true  #불완전한 인덱스를 다시 작성할지 여부를 지정, 완료되지않은 인덱스를 제거하고 그들을 다시 시도하는것이 default임.
   #repairPath: <string>
   journal:
      #enabled: <boolean>  #64비트 OS에서는 true이고, 32비트는 false가 디폴트로 들어감.
      commitIntervalMs: 100  #mongod프로세스가 journal 작업사이에 밀리초단위로 최대시간을 설정. 값이 작을수록 journal 의 내구성을 향상시킬수 있다.
   directoryPerDB: false  #true로 할경우, 각 데이터베이스에 데이터를 저장하기위해 별도의 디렉토리를 사용함. 
   syncPeriodSecs: 60  #fsync 를 조작해서 데이터파일에 데이터를 풀러시하기 전에 전달할 수 있는 시간?
   engine: wiredTiger  #wiredTiger || mmapv1 || inMemory
   mmapv1:
      #preallocDataFiles: <boolean>  #Deprecated since version 2.6.
      nsSize: 16  #네임스페이스파일의 기본크기? .ns 로 끝나는 파일.
      quota:
         enforced: false  #데이터베이스가 가질수 있는 숫자데이터 파일의 최대한도의 적용을 해제함.
         maxFilesPerDB: 8  #데이터베이스당 데이터파일의 수를 제한.
      smallFiles: false  #이 옵션은 데이터베이스 성능에 영향을 줄수 있다고함. 데이터파일의 초기크기를 줄이고, 최대크기를 제한한다.
      #journal:
         #debugFlags: <int>
         #commitIntervalMs: <num> #Deprecated since version 3.2
   wiredTiger:
      engineConfig:
         #cacheSizeGB: <number>  #WiredTiger 모든 데이터에 사용하는 캐시의 최대 크기. 기본값이상을 증가하지않길 권장한다.
         statisticsLogDelaySecs: 0  #--dbpath에 지정되는 초 간격
         journalCompressor: snappy  #저널데이터를 압축하는 설정, snappy || none || zlib
         directoryForIndexes: false  #??
      collectionConfig:
         blockCompressor: snappy  #압축하는 설정, snappy || none || zlib
      indexConfig:
         prefixCompression: true  #압축할때 접두사를 붙여서 압축을 할것인지 설정인듯.


#==================================================================================

operationProfiling:
   slowOpThresholdMs: 100
   mode: off  #off || slowOp || all

#==================================================================================

replication:
   #oplogSizeMB: <int>
   #replSetName: <string>
   secondaryIndexPrefetch: all  #all || none || _id_only
   enableMajorityReadConcern: false

#==================================================================================

sharding:
   #clusterRole: <string>  #configsvr(27019포트) || shardsvr(27018포트) 둘중에 하나를 사용
   archiveMovedChunks: false 

#==================================================================================


#MongoDB Enterprise에서만 사용가능
#auditLog:
   #destination: <string>
   #format: <string>
   #path: <string>
   #filter: <string>


#==================================================================================


#snmp:
   #subagent: <boolean>
   #master: <boolean>


#==================================================================================


processManagement:
   windowsService:
      serviceName: MongoDB  #net start <name> 에 들어가는 부분이다. --install 을 하고 사용하며, --remove 로 지울수있다.
      displayName: "몽고DB 서비스"  #서비스 관리 응용프로그램에 MongoDB 를 리스팅함
      description: "MongoDB Server"  #서비스의 설명함. 공백이 포함될경우 따옴표로 묶어야한다.
      #serviceUser: <string>
      #servicePassword: <string>  #이를 사용하면 비밀번호를 사용할수 있는듯 하다.

